{"ast":null,"code":"var _jsxFileName = \"/Users/Marine/Development/react-eshop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/Marine/Development/react-eshop/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverview","CollectionPage","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","isCollectionLoaded","selectIsCollectionLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACF,mBAAD,CAAjD;AACA,MAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC7B;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAEJ,KAAK,iBACT,oBAAC,6BAAD;AACI,QAAA,SAAS,EAAEG;AADf,SAEQH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAWI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAEJ,KAAK,iBACT,oBAAC,yBAAD;AACI,QAAA,SAAS,EAAEG;AADf,SAEQH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAuBH;;AA/BkC;;AAkCvC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEZ,0BADuB;AAE7Ce,EAAAA,kBAAkB,EAAEC;AAFyB,CAAD,CAAhD;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n    componentDidMount() {\n        const { fetchCollectionsStartAsync } = this.props;\n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        const { match, isCollectionFetching } = this.props;\n        return (\n            <div className=\"shop-page\">\n                <Route\n                    exact\n                    path={`${match.path}`}\n                    render={props => (\n                        <CollectionOverviewWithSpinner\n                            isLoading={isCollectionFetching}\n                            {...props}\n                        />\n                    )}\n                />\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    render={props => (\n                        <CollectionPageWithSpinner\n                            isLoading={isCollectionFetching}\n                            {...props}\n                        />\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}